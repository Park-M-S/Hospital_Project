name: Deploy Hospital Project to EC2

on:
  push:
    branches: [ main ]

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_KEY: ${{ secrets.EC2_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: 백엔드 이미지 생성
      run: |
        cd hospital_main
        docker build --no-cache -t hospital-backend:${{ github.sha }} .
        docker tag hospital-backend:${{ github.sha }} hospital-backend:latest

    - name: 프론트엔드 이미지 생성
      run: |
        cd frontend
        # 환경변수 파일 생성
        echo "VITE_API_BASE_URL=http://${{ secrets.EC2_HOST }}:8888" > .env.production
        echo "VITE_GOOGLE_TTS_API_KEY=${{ secrets.VITE_GOOGLE_TTS_API_KEY }}" >> .env.production
        echo "VITE_KAKAO_REST_API_KEY=${{ secrets.VITE_KAKAO_REST_API_KEY }}" >> .env.production
        echo "VITE_KAKAO_MAP_KEY=${{ secrets.VITE_KAKAO_MAP_KEY }}" >> .env.production
        
        docker build -t hospital-frontend:${{ github.sha }} .
        docker tag hospital-frontend:${{ github.sha }} hospital-frontend:latest

    - name: 도커 이미지 저장
      run: |
        docker save hospital-backend:latest | gzip > backend.tar.gz
        docker save hospital-frontend:latest | gzip > frontend.tar.gz

    - name: EC2에 복사하기
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: "backend.tar.gz,frontend.tar.gz,docker-compose.prod.yml,deploy.sh"
        target: "/home/ec2-user/"

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          docker load < /home/ec2-user/backend.tar.gz
          docker load < /home/ec2-user/frontend.tar.gz
          
          export IMAGE_TAG=latest
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_ROOT_PASSWORD="${{ secrets.DB_ROOT_PASSWORD }}"
          
          chmod +x /home/ec2-user/deploy.sh
          /home/ec2-user/deploy.sh
          
          rm -f /home/ec2-user/*.tar.gz
